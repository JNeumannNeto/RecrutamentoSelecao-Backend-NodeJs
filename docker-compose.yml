version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: recrutamento-postgres
    environment:
      POSTGRES_DB: recrutamento_selecao
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - recrutamento-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: recrutamento-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - recrutamento-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth
    container_name: recrutamento-auth-service
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: recrutamento_selecao
      DB_USER: postgres
      DB_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      AUTH_SERVICE_PORT: 8083
      JOB_SERVICE_PORT: 8084
      CANDIDATE_SERVICE_PORT: 8085
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - recrutamento-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  job-service:
    build:
      context: .
      dockerfile: Dockerfile.job
    container_name: recrutamento-job-service
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: recrutamento_selecao
      DB_USER: postgres
      DB_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      AUTH_SERVICE_PORT: 8083
      JOB_SERVICE_PORT: 8084
      CANDIDATE_SERVICE_PORT: 8085
    ports:
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - recrutamento-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  candidate-service:
    build:
      context: .
      dockerfile: Dockerfile.candidate
    container_name: recrutamento-candidate-service
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: recrutamento_selecao
      DB_USER: postgres
      DB_PASSWORD: postgres123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      AUTH_SERVICE_PORT: 8083
      JOB_SERVICE_PORT: 8084
      CANDIDATE_SERVICE_PORT: 8085
    ports:
      - "8085:8085"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - recrutamento-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: recrutamento-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - auth-service
      - job-service
      - candidate-service
    networks:
      - recrutamento-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  recrutamento-network:
    driver: bridge
